# Script para verificar prerrequisitos del sistema
# Ejecutar en PowerShell: .\check_requirements.ps1

Write-Host "üîç Verificando prerrequisitos del Sistema de Reservas de Hotel..." -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan

# Verificar Docker
Write-Host "`nüì¶ Verificando Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker instalado: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° instalado o no est√° en PATH" -ForegroundColor Red
    Write-Host "üí° Instalar desde: https://www.docker.com/products/docker-desktop" -ForegroundColor Blue
}

# Verificar Docker Compose
Write-Host "`nüê≥ Verificando Docker Compose..." -ForegroundColor Yellow
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose instalado: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose no est√° instalado" -ForegroundColor Red
    Write-Host "üí° Instalar con Docker Desktop o por separado" -ForegroundColor Blue
}

# Verificar que Docker est√© ejecut√°ndose
Write-Host "`nüîÑ Verificando que Docker est√© ejecut√°ndose..." -ForegroundColor Yellow
try {
    $dockerInfo = docker info 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Docker daemon est√° ejecut√°ndose" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Docker daemon no est√° ejecut√°ndose" -ForegroundColor Red
        Write-Host "üí° Iniciar Docker Desktop" -ForegroundColor Blue
    }
} catch {
    Write-Host "‚ùå No se puede conectar al Docker daemon" -ForegroundColor Red
}

# Verificar Git
Write-Host "`nüìÇ Verificando Git..." -ForegroundColor Yellow
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git instalado: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git no est√° instalado" -ForegroundColor Red
    Write-Host "üí° Instalar desde: https://git-scm.com/download/win" -ForegroundColor Blue
}

# Verificar Python (opcional)
Write-Host "`nüêç Verificando Python..." -ForegroundColor Yellow
try {
    $pythonVersion = python --version
    Write-Host "‚úÖ Python instalado: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Python no est√° instalado (opcional para desarrollo)" -ForegroundColor Orange
    Write-Host "üí° Instalar desde: https://www.python.org/downloads/" -ForegroundColor Blue
}

# Verificar Make (opcional)
Write-Host "`nüî® Verificando Make..." -ForegroundColor Yellow
try {
    $makeVersion = make --version
    Write-Host "‚úÖ Make instalado: $makeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Make no est√° instalado (opcional, facilita comandos)" -ForegroundColor Orange
    Write-Host "üí° Instalar con: choco install make (requiere Chocolatey)" -ForegroundColor Blue
}

# Verificar puertos disponibles
Write-Host "`nüîå Verificando puertos requeridos..." -ForegroundColor Yellow
$requiredPorts = @(80, 5432, 6379, 8000, 8001, 8002, 8003, 8004, 8005, 8501, 9090, 3000)
$portsInUse = @()

foreach ($port in $requiredPorts) {
    $connection = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
    if ($connection) {
        $portsInUse += $port
    }
}

if ($portsInUse.Count -eq 0) {
    Write-Host "‚úÖ Todos los puertos requeridos est√°n disponibles" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Los siguientes puertos est√°n en uso: $($portsInUse -join ', ')" -ForegroundColor Orange
    Write-Host "üí° Detener servicios que usen estos puertos o cambiar configuraci√≥n" -ForegroundColor Blue
}

# Verificar espacio en disco
Write-Host "`nüíæ Verificando espacio en disco..." -ForegroundColor Yellow
$disk = Get-WmiObject -Class Win32_LogicalDisk -Filter "DeviceID='C:'"
$freeSpaceGB = [math]::Round($disk.FreeSpace / 1GB, 2)

if ($freeSpaceGB -gt 5) {
    Write-Host "‚úÖ Espacio disponible: $freeSpaceGB GB" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Poco espacio disponible: $freeSpaceGB GB" -ForegroundColor Orange
    Write-Host "üí° Se recomienda al menos 5GB libres" -ForegroundColor Blue
}

Write-Host "`n================================================================" -ForegroundColor Cyan
Write-Host "üéØ Verificaci√≥n completada" -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan
